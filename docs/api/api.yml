openapi: 3.0.1

servers:
  - description: Debug environment
    url: http://localhost:<TODO:portnumber>/
  - description: Local Vagrant machine
    url: http://test.dans.knaw.nl
info:
  description: Private interface for generating Deposit Agreements for depositing datasets to EASY
  version: 1.0.0
  title: Deposit Agreement Generator API
  contact:
    email: info@dans.knaw.nl
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
tags:
  - name: service
    description: Information about service status
  - name: agreement
    description: Generate a Deposit Agreement
paths:
  /:
    get:
      tags:
        - service
      summary: Returns a description of the service.
      responses:
        200:
          description: description of the service
          content:
            text/plain:
              schema:
                type: string
                description: a plain text, human readable description of the service
                example: |
                  EASY Deposit Agreement Generator Service running (v1.0.0)
        500:
          description: Service is unavailable because of an error.
  /agreement:
    post:
      summary: Returns a Deposit Agreement based on the provided JSON
      requestBody:
        description: JSON document containing the agreement request
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgreementRequest'
      responses:
        200:
          description: OK
          content:
            'application/pdf': {}
        400.1:
          $ref: "#/components/responses/MalformedMetadata"
        400.2:
          $ref: "#/components/responses/MalformedDepositor"
        400.3:
          $ref: "#/components/responses/MalformedAgreementRequest"
        500:
          $ref: "#/components/responses/InternalServerError"

components:
  responses:
    Unauthorized:
      description: Unauthorized.
    InternalServerError:
      description: Internal Server Error.
    MalformedAgreementRequest:
      description: Bad Request. The agreementRequest contains invalid metadata.
    MalformedMetadata:
      description: Bad request. The metadata document is not valid JSON or contains fields not defined in the metadata model.
    MalformedDepositor:
      description: Bad Request. The depositor document is not valid JSON or is not complete

  schemas:
    AgreementRequest:
      type: object
      additionalProperties: false
      properties:
        deposit:
          $ref: "#/components/schemas/DatasetMetadata"
        depositor:
          $ref: "#/components/schemas/Depositor"
        agreementVersion:
          type: string
          enum:
            - 4.0
        agreementLanguage:
          type: string
          enum:
            - EN
            - NL
        isAgreementPreview:
          $ref: "#/components/schemas/IsPreview"
    Depositor:
      type: object
        additionalProperties: false
        required:
          - name
          - email
          - organisation
          - postalCode
          - postalAddress
          - city
          - country
        properties:
          name:
            type: string
          organisation:
            type: string
          postalAddress:
            type: string
          postalCode:
            type: string
          city:
            type: string
          country:
            type: string
          telNo:
            type: string
          email:
            type: string
    DatasetMetadata:
      type: object
      additionalProperties: false
      properties:
        # Basic information
        identifiers:
          type: array
          items:
            $ref: "#/components/schemas/SchemedValue"
        titles:
          type: array
          items:
            type: string
          example:
            - "Title 1"
            - "Title 2"
        creators:
          type: array
          items:
            $ref: "#/components/schemas/Author"

        dates:
          type: array
          items:
            $ref: "#/components/schemas/Date"


        # Licence and access
        publishers:
          $ref: "#/components/schemas/StringArray"
        accessRights:
          $ref: "#/components/schemas/AccessRights"
        license:
          type: string
          format: url


        # For the data manager
        privacySensitiveDataPresent:
          type: string
          enum:
            - yes
            - no
            - unspecified
        acceptDepositAgreement:
          type: boolean

    # Components of DatasetMetadata below

    AccessRights:
      type: string
      enum:
        - OPEN_ACCESS
        - REQUEST_PERMISSION
    SchemedValue:
      type: object
      required:
        - scheme
        - value
      properties:
        scheme:
          type: string
        value:
          type: string

    Author:
      type: object
      properties:
        titles:
          type: string
        initials:
          type: string
        insertions:
          type: string
        surname:
          type: string
        role:
          $ref: "#/components/schemas/SchemedKeyValue"
        ids:
          type: array
          items:
            $ref: "#/components/schemas/SchemedValue"
        organization:
          type: string
      oneOf:
        - required:
            - surname
            - initials
        - required:
            - organization
      example:
        titles: Prof Dr
        initials: A
        insertions:
        surname: Einstein
        role:
          - scheme: datacite:contributorType
          - key: DataManager
          - value: "Data Manager"
        ids:
          - scheme: DAI
            value: "123456789x"
          - scheme: ISNI
            value: "ISNI:000000012281955X"
        organization: University of Zurich

    Date:
      type: object
      required:
        - value
        - qualifier
      properties:
        scheme:
          type: string
        value:
          type: string
        qualifier:
          type: string
          enum:
            - dcterms:created
            - dcterms:available
            - dcterms:date
            - dcterms:dateAccepted
            - dcterms:dateCopyrighted
            - dcterms:dateSubmitted
            - dcterms:issued
            - dcterms:modified
            - dcterms:valid

    SchemedKeyValue:
      type: object
      required:
        - scheme
        - key
        - value
      properties:
        scheme:
          type: string
        value:
          type: string
        key:
          type: string
    # Note: it is not possible to provide examples in combination with a reference to this
    # schema. If you need examples, you'll have to spell out the complete type.
    StringArray:
      type: array
      items:
        type: string
    IsPreview:
      type: boolean
      description: Whether the resulting Agreement is a sample (true), or a final Agreement (false)
